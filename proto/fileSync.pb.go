// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fileSync.proto

package fileSync

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//message for file sync request
type FileSyncReq struct {
	SubDir               string   `protobuf:"bytes,1,opt,name=subDir,proto3" json:"subDir,omitempty"`
	FileName             string   `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileSize             int64    `protobuf:"varint,3,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	FileContent          []byte   `protobuf:"bytes,4,opt,name=fileContent,proto3" json:"fileContent,omitempty"`
	IsBinary             bool     `protobuf:"varint,5,opt,name=isBinary,proto3" json:"isBinary,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileSyncReq) Reset()         { *m = FileSyncReq{} }
func (m *FileSyncReq) String() string { return proto.CompactTextString(m) }
func (*FileSyncReq) ProtoMessage()    {}
func (*FileSyncReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f500c2c5ea8ca846, []int{0}
}

func (m *FileSyncReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileSyncReq.Unmarshal(m, b)
}
func (m *FileSyncReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileSyncReq.Marshal(b, m, deterministic)
}
func (m *FileSyncReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileSyncReq.Merge(m, src)
}
func (m *FileSyncReq) XXX_Size() int {
	return xxx_messageInfo_FileSyncReq.Size(m)
}
func (m *FileSyncReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FileSyncReq.DiscardUnknown(m)
}

var xxx_messageInfo_FileSyncReq proto.InternalMessageInfo

func (m *FileSyncReq) GetSubDir() string {
	if m != nil {
		return m.SubDir
	}
	return ""
}

func (m *FileSyncReq) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *FileSyncReq) GetFileSize() int64 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *FileSyncReq) GetFileContent() []byte {
	if m != nil {
		return m.FileContent
	}
	return nil
}

func (m *FileSyncReq) GetIsBinary() bool {
	if m != nil {
		return m.IsBinary
	}
	return false
}

//message for file remove request
type FileRemoveReq struct {
	SubDir               string   `protobuf:"bytes,1,opt,name=subDir,proto3" json:"subDir,omitempty"`
	FileName             string   `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileRemoveReq) Reset()         { *m = FileRemoveReq{} }
func (m *FileRemoveReq) String() string { return proto.CompactTextString(m) }
func (*FileRemoveReq) ProtoMessage()    {}
func (*FileRemoveReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f500c2c5ea8ca846, []int{1}
}

func (m *FileRemoveReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileRemoveReq.Unmarshal(m, b)
}
func (m *FileRemoveReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileRemoveReq.Marshal(b, m, deterministic)
}
func (m *FileRemoveReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileRemoveReq.Merge(m, src)
}
func (m *FileRemoveReq) XXX_Size() int {
	return xxx_messageInfo_FileRemoveReq.Size(m)
}
func (m *FileRemoveReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FileRemoveReq.DiscardUnknown(m)
}

var xxx_messageInfo_FileRemoveReq proto.InternalMessageInfo

func (m *FileRemoveReq) GetSubDir() string {
	if m != nil {
		return m.SubDir
	}
	return ""
}

func (m *FileRemoveReq) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

//message for file sync response
type FileSyncResp struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileSyncResp) Reset()         { *m = FileSyncResp{} }
func (m *FileSyncResp) String() string { return proto.CompactTextString(m) }
func (*FileSyncResp) ProtoMessage()    {}
func (*FileSyncResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f500c2c5ea8ca846, []int{2}
}

func (m *FileSyncResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileSyncResp.Unmarshal(m, b)
}
func (m *FileSyncResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileSyncResp.Marshal(b, m, deterministic)
}
func (m *FileSyncResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileSyncResp.Merge(m, src)
}
func (m *FileSyncResp) XXX_Size() int {
	return xxx_messageInfo_FileSyncResp.Size(m)
}
func (m *FileSyncResp) XXX_DiscardUnknown() {
	xxx_messageInfo_FileSyncResp.DiscardUnknown(m)
}

var xxx_messageInfo_FileSyncResp proto.InternalMessageInfo

func (m *FileSyncResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*FileSyncReq)(nil), "fileSync.FileSyncReq")
	proto.RegisterType((*FileRemoveReq)(nil), "fileSync.FileRemoveReq")
	proto.RegisterType((*FileSyncResp)(nil), "fileSync.FileSyncResp")
}

func init() { proto.RegisterFile("fileSync.proto", fileDescriptor_f500c2c5ea8ca846) }

var fileDescriptor_f500c2c5ea8ca846 = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0xcb, 0xcc, 0x49,
	0x0d, 0xae, 0xcc, 0x4b, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0x66,
	0x33, 0x72, 0x71, 0xbb, 0x41, 0x39, 0x41, 0xa9, 0x85, 0x42, 0x62, 0x5c, 0x6c, 0xc5, 0xa5, 0x49,
	0x2e, 0x99, 0x45, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x50, 0x9e, 0x90, 0x14, 0x17, 0x58,
	0x8f, 0x5f, 0x62, 0x6e, 0xaa, 0x04, 0x13, 0x58, 0x06, 0xce, 0x87, 0xc9, 0x05, 0x67, 0x56, 0xa5,
	0x4a, 0x30, 0x2b, 0x30, 0x6a, 0x30, 0x07, 0xc1, 0xf9, 0x42, 0x0a, 0x5c, 0xdc, 0x20, 0xb6, 0x73,
	0x7e, 0x5e, 0x49, 0x6a, 0x5e, 0x89, 0x04, 0x8b, 0x02, 0xa3, 0x06, 0x4f, 0x10, 0xb2, 0x10, 0x48,
	0x77, 0x66, 0xb1, 0x53, 0x66, 0x5e, 0x62, 0x51, 0xa5, 0x04, 0xab, 0x02, 0xa3, 0x06, 0x47, 0x10,
	0x9c, 0xaf, 0xe4, 0xcc, 0xc5, 0x0b, 0x72, 0x5c, 0x50, 0x6a, 0x6e, 0x7e, 0x59, 0x2a, 0x99, 0xce,
	0x53, 0xd2, 0xe0, 0xe2, 0x41, 0xf8, 0xb0, 0xb8, 0x40, 0x48, 0x82, 0x8b, 0xbd, 0xb8, 0x34, 0x39,
	0x39, 0xb5, 0xb8, 0x18, 0x6c, 0x08, 0x47, 0x10, 0x8c, 0x6b, 0xd4, 0xcd, 0xc8, 0xc5, 0x0f, 0x53,
	0x1a, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0x64, 0xcb, 0xc5, 0x85, 0x70, 0x82, 0x90, 0xb8,
	0x1e, 0x3c, 0x24, 0x51, 0x1c, 0x26, 0x25, 0x86, 0x2a, 0x01, 0xb7, 0xcc, 0x92, 0x8b, 0x03, 0xc6,
	0x17, 0x12, 0xc5, 0xa6, 0x06, 0xa7, 0x56, 0x27, 0x61, 0x2e, 0xc1, 0xe4, 0xfc, 0x5c, 0xbd, 0x92,
	0xcc, 0xbc, 0x4a, 0xb8, 0x8a, 0x24, 0x36, 0x70, 0x04, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x77, 0x05, 0xb4, 0xfd, 0xd2, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FileSyncServiceClient is the client API for FileSyncService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileSyncServiceClient interface {
	//file remove
	FileRemove(ctx context.Context, in *FileRemoveReq, opts ...grpc.CallOption) (*FileSyncResp, error)
	//file sync
	FileSync(ctx context.Context, in *FileSyncReq, opts ...grpc.CallOption) (*FileSyncResp, error)
}

type fileSyncServiceClient struct {
	cc *grpc.ClientConn
}

func NewFileSyncServiceClient(cc *grpc.ClientConn) FileSyncServiceClient {
	return &fileSyncServiceClient{cc}
}

func (c *fileSyncServiceClient) FileRemove(ctx context.Context, in *FileRemoveReq, opts ...grpc.CallOption) (*FileSyncResp, error) {
	out := new(FileSyncResp)
	err := c.cc.Invoke(ctx, "/fileSync.FileSyncService/FileRemove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSyncServiceClient) FileSync(ctx context.Context, in *FileSyncReq, opts ...grpc.CallOption) (*FileSyncResp, error) {
	out := new(FileSyncResp)
	err := c.cc.Invoke(ctx, "/fileSync.FileSyncService/FileSync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileSyncServiceServer is the server API for FileSyncService service.
type FileSyncServiceServer interface {
	//file remove
	FileRemove(context.Context, *FileRemoveReq) (*FileSyncResp, error)
	//file sync
	FileSync(context.Context, *FileSyncReq) (*FileSyncResp, error)
}

// UnimplementedFileSyncServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFileSyncServiceServer struct {
}

func (*UnimplementedFileSyncServiceServer) FileRemove(ctx context.Context, req *FileRemoveReq) (*FileSyncResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileRemove not implemented")
}
func (*UnimplementedFileSyncServiceServer) FileSync(ctx context.Context, req *FileSyncReq) (*FileSyncResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileSync not implemented")
}

func RegisterFileSyncServiceServer(s *grpc.Server, srv FileSyncServiceServer) {
	s.RegisterService(&_FileSyncService_serviceDesc, srv)
}

func _FileSyncService_FileRemove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileRemoveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSyncServiceServer).FileRemove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fileSync.FileSyncService/FileRemove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSyncServiceServer).FileRemove(ctx, req.(*FileRemoveReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSyncService_FileSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileSyncReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSyncServiceServer).FileSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fileSync.FileSyncService/FileSync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSyncServiceServer).FileSync(ctx, req.(*FileSyncReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileSyncService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fileSync.FileSyncService",
	HandlerType: (*FileSyncServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FileRemove",
			Handler:    _FileSyncService_FileRemove_Handler,
		},
		{
			MethodName: "FileSync",
			Handler:    _FileSyncService_FileSync_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fileSync.proto",
}
